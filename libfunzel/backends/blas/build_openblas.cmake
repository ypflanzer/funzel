option(FUNZEL_USE_SHARED_BLAS "Use shared version of the internal OpenBLAS" FALSE)

include(ExternalProject)

set(CBLAS_SOURCE_DIR "${CMAKE_BINARY_DIR}/3rdparty/openblas_src")
set(CBLAS_PREFIX_DIR "${CMAKE_BINARY_DIR}/3rdparty/openblas")
set(CBLAS_INSTALL_DIR "${CMAKE_BINARY_DIR}/3rdparty/openblas_install")

set(CBLAS_LIBRARIES
	"${CBLAS_INSTALL_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}openblas_64${CMAKE_STATIC_LIBRARY_SUFFIX}"
	CACHE FILEPATH "openblas library." FORCE)

set(CBLAS_INC_DIR
	"${CBLAS_INSTALL_DIR}/include/openblas64"
	CACHE PATH "openblas include directory." FORCE)

set(FUNZEL_BLAS_DEFINITIONS -DLAPACK_DISABLE_NAN_CHECK=1 -DLAPACK_ILP64=1 -DFUNZEL_ILP64=1)

if(MSVC)
	set(FUNZEL_BLAS_DEFINITIONS ${FUNZEL_BLAS_DEFINITIONS} -DHAVE_LAPACK_CONFIG_H -DLAPACK_COMPLEX_CPP)
	set(FUNZEL_BLAS_DYNAMIC_ARCH FALSE CACHE BOOL "Use dynamic arch for flexibility.")
	set(FUNZEL_BLAS_COMPLEX FALSE CACHE BOOL "Use complex version of OpenBLAS.")
else()
	set(FUNZEL_BLAS_DYNAMIC_ARCH TRUE CACHE BOOL "Use dynamic arch for flexibility.")
	set(FUNZEL_BLAS_COMPLEX TRUE CACHE BOOL "Use complex version of OpenBLAS.")
endif()

ExternalProject_Add(
	extern_openblas
	GIT_REPOSITORY https://github.com/OpenMathLib/OpenBLAS.git
	GIT_TAG v0.3.30
	SOURCE_DIR ${CBLAS_SOURCE_DIR}
	PREFIX ${CBLAS_PREFIX_DIR}
	INSTALL_DIR ${CBLAS_INSTALL_DIR}
	BUILD_IN_SOURCE 0
	UPDATE_COMMAND ""
	CMAKE_ARGS
			-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
			-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
			-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
			-DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
			-DCMAKE_INSTALL_PREFIX=${CBLAS_INSTALL_DIR}
			-DCMAKE_POSITION_INDEPENDENT_CODE=ON
			-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
			
			-DBUILD_SHARED_LIBS=${FUNZEL_USE_SHARED_BLAS}
			-DUSE_OPENMP=ON
			-DUSE_THREAD=ON
			-DC_LAPACK=ON
			-DNO_WARMUP=ON
			-DINTERFACE64=ON
			-DBUILD_INDEX64=ON
			-DDYNAMIC_ARCH=${FUNZEL_BLAS_DYNAMIC_ARCH}
			#-DDYNAMIC_LIST="HASWELL;ZEN;SKYLAKEX"

			-DCMAKE_VERBOSE_MAKEFILE=OFF
			${OPENBLAS_POLICY_ARGS}
			${EXTERNAL_OPTIONAL_ARGS}
	CMAKE_CACHE_ARGS
	-DCMAKE_INSTALL_PREFIX:PATH=${CBLAS_INSTALL_DIR}
	-DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON
	-DCMAKE_BUILD_TYPE:STRING=${THIRD_PARTY_BUILD_TYPE}
	# ninja need to know where openblas.lib comes from
	BUILD_BYPRODUCTS ${CBLAS_LIBRARIES}
)

add_library(openblas::openblas STATIC IMPORTED GLOBAL)
set_property(TARGET openblas::openblas PROPERTY IMPORTED_LOCATION ${CBLAS_LIBRARIES})
add_dependencies(openblas::openblas extern_openblas)

set(OPENBLAS_SHARED_LIB
	${CBLAS_INSTALL_DIR}/bin/${CMAKE_STATIC_LIBRARY_PREFIX}openblas_64${CMAKE_SHARED_LIBRARY_SUFFIX})

set(FUNZEL_BLAS_LIBRARIES openblas::openblas)
set(FUNZEL_BLAS_INCLUDE_DIRS ${CBLAS_INC_DIR})

set(BLA_VENDOR "OpenBLAS")

if(MSVC AND FUNZEL_USE_SHARED_BLAS) ## OpenBLAS outputs somewhere else, fix that.
	add_custom_command(TARGET funzelBlas POST_BUILD
	COMMAND
		${CMAKE_COMMAND} -E copy ${OPENBLAS_SHARED_LIB} ${CMAKE_BINARY_DIR}/bin/$<$<CONFIG:Debug>:Debug>$<$<CONFIG:Release>:Release>$<$<CONFIG:RelWithDebInfo>:RelWithDebInfo>/
	)
endif()
